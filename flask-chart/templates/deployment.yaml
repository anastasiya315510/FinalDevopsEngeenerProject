apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flask-chart.fullname" . }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  labels:
    app: {{ include "flask-chart.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "flask-chart.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "flask-chart.name" . }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
        envFrom:
          - configMapRef:
              name: {{ include "flask-chart.fullname" . }}-config
        readinessProbe:
          httpGet:
            path: /health   # endpoint that returns 200 OK when app is ready
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health   # endpoint that returns 200 OK when app is alive
            port: {{ .Values.service.port }}
          initialDelaySeconds: 10
          periodSeconds: 15
