name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

jobs:
  # -----------------------------
  # Stage 1: Lint (matrix build)
  # -----------------------------
  lint:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]  # Test linting across multiple Python versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Lint with pylint
        run: |
          source .venv/bin/activate
          pylint **/*.py || true  # Do not fail workflow on lint errors

  # -----------------------------
  # Stage 2: Test
  # -----------------------------
  test:
    runs-on: ubuntu-22.04
    needs: lint
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          export PYTHONPATH=$(pwd)
          source .venv/bin/activate
          pytest

  # -----------------------------
  # Stage 3: Deploy
  # -----------------------------
  deploy:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Deploy to Kubernetes via Helm
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [ "$BRANCH" = "dev" ]; then
              echo "Deploying to development namespace"
              helm upgrade --install flask-app-dev flask-chart/ \
                  --namespace dev --create-namespace -f flask-chart/values-dev.yaml
          elif [ "$BRANCH" = "master" ]; then
              echo "Deploying to production namespace"
              docker build -t 315510/flask_final_project:latest .
              echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
              docker push 315510/flask_final_project:latest

              helm upgrade --install flask-app-prod flask-chart/ \
                  --namespace prod --create-namespace -f flask-chart/values-prod.yaml
          fi